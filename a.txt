完成！我已經建立了完整的 OCR 訓練和整合系統：

  📁 已建立的檔案

  1. train_ocr_model_v2.py - 改進版訓練程式

  - 使用 MobileNetV3-Small + BiLSTM + CTC Loss 架構
  - 支援資料增強（旋轉、扭曲、噪點、亮度）
  - 自動計算序列和字元準確率
  - 支援 ONNX 匯出
  - 參數量小（<3M），適合 CPU 部署

  2. ocr_api_server.py - FastAPI 服務

  - 支援 PyTorch 和 ONNX Runtime
  - RESTful API 介面
  - 自動文檔（/docs）
  - 統計和健康檢查端點
  - CORS 支援

  3. INTEGRATION_GUIDE.md - 整合指南

  - 完整的系統架構說明
  - 訓練流程步驟
  - 兩種整合方式（API 和本地 ONNX）
  - 效能優化建議

  4. test_ocr_integration.py - 測試工具

  - 批量測試準確率
  - 效能基準測試
  - API 壓力測試
  - 比較不同 OCR 方法

  5. requirements.txt - 依賴套件清單

  🚀 快速開始

  訓練模型：

  cd ocr_training

  # 使用 GPU 訓練
  python train_ocr_model_v2.py \
      --data_dir captcha_auto_label/20250808_173711 \
      --labels captcha_auto_label/20250808_173711/training_data.txt \
      --epochs 100 \
      --batch_size 64 \
      --device cuda \
      --export_onnx

  啟動 API 服務：

  python ocr_api_server.py --host 127.0.0.1 --port 80009-

  測試效能：

  # 批量測試
  python test_ocr_integration.py --mode batch --image_dir captcha_auto_label/20250808_173711

  # 壓力測試
  python test_ocr_integration.py --mode stress

  🎯 關鍵特點

  1. 高效架構：MobileNetV3 確保快速推理（CPU < 200ms）
  2. 雙模式部署：支援 API 服務或本地 ONNX
  3. 完整工具鏈：從資料收集到部署一站式解決
  4. 效能優化：支援 INT8 量化、批次處理
  5. 易於整合：提供詳細的整合程式碼範例

  系統已準備就緒，您可以開始訓練自己的 OCR 模型了！